- layout file: The base of the theme. Use the layout file to host repeated theme elements like headers and footers. có nghĩa dang cơ sở của chủ đề, dùng để kưu trữ các phần tử chủ đề lập lại như header hoặc footer

- template: The template that controls what's displayed on a page. Each theme should include different types of templates to display different types of content, such as the home page and products. You can also create multiple templates for the same resource type and associate them with your store resources, to allow for variation.

JSON templates act only as a wrapper for sections, while Liquid templates contain code. (dịch ra là: nới kiểm soát hững gì được hiển thị trên 1 trang, mỗi chủ đề nên bao gồm nhiều template khác nhau. các temlate json chỉ hoạt động như một trình baop bọc cho các phần, trong khi các mẫu liquid chữa mã )

- section là các mô đun nội dung có thể tái sử dụng , có thể tùy chỉnh mà nười bán có thể thêm vào mẫu json)

- block: các mo đun nọi dung có thể tái ché sử dụng có thể tùy chỉnh có thể được thêm vào các phần, đồng thời có thể bị xóa hoặc sắp xếp lại

- assets là nơi lưu trữ nhwunxg file css và js 
- snippets là nơi lưu trữ liquid vs HTML mà bạn muốn sử dụng lại trong thêm của mình 
- locales: là nơi chứa những ngôn ngữ  khác nhau

- assets 

- Tempalte là nơi kiểm soát nội dung hiển thị trên mỗi trang trong 1 chủ đề.

+ Mỗi trang trong cửa hàng trực tuyến có một mẫu liên quan. Bạn có thể sử dụng mẫu để thêm chức năng có ý nghĩa cho trang. VD: bạn có thể thêm đề xuát sản phầm bổ sung vào mẫu sản phảm haowjc thêm comment vào bài viết
+ Bạn có thể tạo nhiều phiên bản của template để tạo các mẫu tùy chỉnh cho các trường hợp sử dụng khác nhau. VD: Có thể tạo mẫu sản phẩm riêng cho các sản phẩm áo khoác hoặc mẫu trang rieng co các trang có nô

+ Location (Vị trí cấu trúc file trong template)
└── theme
    ├── layout
    ├── templates
    |   ├── 404.json
    |   ├── article.json
    |   ...
    ...

+ Subtypes (loại hình phụ): Có thể sử dụng hai loại tệp mãu khác nhau trong chủ đề. các loại tệp này có thể tạo ra nhiều loại mẫu (template) mỗi loại đại diện cho một nội dung trong cửa hàng trực tuyến của người bán 

+ File types (Các loại tệp):  Có 2 loại tệp khác nhau có thể sử dụng cho một mẫu chủ đề: JSON or Liquid. có một số template chỉ hỗ trọ cho liqui, trong  khi các loại mẫu khác hỗ trợ loại tập mẫu.
	+ JSON: mẫu json là các tệp dữ liệu có phần mở rộng tệp. Các mẫu này cho phép chúng ta dễ dàng điền vào mẫu của mình với nội dung từ các phần. Người bán có thể thêm sử xóa hoặc sắp xếp lại các mục bằng trình chỉnh sửa chủ đề. Nếu bạn đang sử dụng mãu JSON mọi HTML haowjc Liquid đều cần được được dưa vào phần được mẫu tham chiếu
	+ Liquid: mẫu liquid là tệp đánh dầu liquid, có phần mở rộng, bạn có thể thêm liquid và HTML trực tiếp vào template liquid có đuôi .Liquid

+ JSON vs Liquid: Nếu bạn muốn sử dụng các phần trong một mẫu, thì bạn nên sử dụng mẫu JSON 
+ Template type: Các loại mẫu có sẵn đại diện cho một loại nội dung trong cửa hàng trực tuyến của thương nhân. Tuy nhiên, bạn phải có một mẫu phù hơp cho bất kỳ loại trang nào bạn muốn hiển thị. VD: để hiển thị trang sản phẩm bạn càn ít nhất 1 loại .product. Bjan có tối đã 100 mẫu json tỏng chủ để của mình. trên tất cả các loại mãu. Bạn có thẻ sử dụng các loại mẫu sau trong chủ đề của mình.  

* json template:
- schema: 
+ Attribute section có type là object và mỗi đối tượng sử dụng id làm khóa và dữ liệu phần làm giá trị. thuộc tính này cần chứa ít nhát một phần. id ko được trùng lập. định dạng của dữ liệu phần giống như dữ liệu phần trong setting_data.json. các json template có thể hiển thi tối đa 25 section và mỗi section có thể có tối đã 50 block